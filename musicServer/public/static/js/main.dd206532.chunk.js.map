{"version":3,"sources":["components/header/Header.js","components/loading/Loading.js","components/list/List.js","tools/index.js","components/lyric/Lyric.js","components/audio/Audio.js","components/pic/Pic.js","App.js","stores/index.js","index.js"],"names":["HeaderUI","react_default","a","createElement","id","this","props","headerArrow","react_router_dom","to","musicName","Component","Header","connect","state","dispatch","Loading","className","ListUI","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","musicList","isLoading","isMove","handleMove","bind","assertThisInitialized","_this2","ref","components_loading_Loading","map","item","index","key","onTouchMove","onTouchEnd","handleEnd","title","musicNameId","author","_this3","window","sessionStorage","getItem","setState","JSON","parse","listScrollTop","axios","post","TransCode","OpenId","Body","SongListId","then","res","data","ErrCode","songs","value","stringify","setItem","headerArrowFn","history","push","musicNameIdFn","isMusicPlayFn","musicNameFn","refs","musicListLi","getElementsByTagName","i","length","scrollTop","offsetTop","List","type","payload","LyricUI","lyricList","active","handleTouch","onTouchStart","lyric","match","params","get","console","log","formatLyricData","isMusicPlay","lyricPlay","lyricPause","nextProps","playing","timer","setInterval","clearInterval","audio","document","getElementById","musicLyricUl","musicLyricLi","time","currentTime","style","top","offsetHeight","lyrics","_this4","result","replace","$0","$1","$2","formatTimeToSec","arr","split","parseFloat","toFixed","Lyric","AudioUI","handleTap","src","audioPlay","audioPause","handleDrag","backgroundImage","play","pause","audioProgress","audioBar","audioNow","scale","duration","left","offsetWidth","width","getAttribute","paused","disX","ontouchstart","ev","This","touch","changedTouches","pageX","offsetLeft","ontouchmove","L","ontouchend","Audio","bool","PicUI","alt","picPlay","picPause","musicPic","animationPlayState","Pic","App","header_Header","react_router","path","component","from","audio_Audio","reducers","combineReducers","arguments","undefined","action","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App"],"mappings":"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","file":"static/js/main.dd206532.chunk.js","sourcesContent":["import React , {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './Header.css'\r\n\r\nclass HeaderUI extends Component{\r\n    render(){\r\n        return (\r\n            <div id='musicHeader'>\r\n                {/* 当heaerArrow为true则显示这个标签 */}\r\n                { this.props.headerArrow && <NavLink to='/list'><span>&lt;</span></NavLink>}\r\n                    { this.props.musicName }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state){\r\n    return {\r\n        headerArrow:state.headerArrow,\r\n        musicName:state.musicName\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch){\r\n    return {\r\n\r\n    }\r\n}\r\nvar Header = connect(mapStateToProps,mapDispatchToProps)(HeaderUI)\r\n\r\nexport default Header","import React , { Component } from 'react';\r\nimport './Loading.css';\r\n\r\nclass Loading extends Component {\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className=\"loader\"></div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Loading;","import React , {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport axios from 'axios'\r\nimport './List.css'\r\nimport Loading from '../loading/Loading.js'\r\nimport { getSessionStorage, setSessionStorage } from '../../tools/index.js'\r\n\r\nclass ListUI extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            musicList:[],\r\n            isLoading:true\r\n        }\r\n        this.isMove = false // isMove为 trun时表示在列表滚动，默认为false\r\n        this.handleMove = this.handleMove.bind(this)\r\n    }\r\n    render(){\r\n        return (\r\n            <div id=\"musicList\" ref='musicList'>\r\n                <ul>\r\n                    {\r\n                        this.state.isLoading === true ? <Loading /> : \r\n                            this.state.musicList.map((item,index)=>{\r\n                                return (\r\n                                    <li key={ item.id } onTouchMove={this.handleMove} \r\n                                    onTouchEnd={()=>{this.handleEnd(item.id , item.title)}}\r\n                                    className={this.props.musicNameId === ''+item.id ? \"active\" : ''} >\r\n                                        <div className=\"listOrder\">{ index+1 }</div>\r\n                                        <div className=\"listName\">\r\n                                            <h3>{ item.title }</h3>\r\n                                            <p>{ item.author }</p>\r\n                                        </div>\r\n                                    </li>\r\n                                )\r\n                            })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount(){\r\n        // 获取本地存储\r\n        var musicList = getSessionStorage('musicList')\r\n        if( musicList ){\r\n            this.setState({\r\n                musicList:JSON.parse(musicList),\r\n                isLoading:false\r\n            },()=>{\r\n                this.listScrollTop();\r\n            })\r\n        }else{\r\n            axios.post('/api/index/index',{\r\n                \"TransCode\":\"020111\",\r\n                \"OpenId\":\"Test\",\r\n                \"Body\":{\"SongListId\":\"141998290\"}\r\n            }).then(res=>{\r\n                // 判断返回状态值是否为OK\r\n                if( res.data.ErrCode === 'OK'){\r\n                    var musicList = res.data.Body.songs\r\n                    this.setState({\r\n                        musicList,\r\n                        isLoading:false\r\n                    },()=>{\r\n                        // 滚动到对应歌曲的位置\r\n                        this.listScrollTop()\r\n                        // 进行本地存储，只能存储字符串\r\n                        setSessionStorage('musicList',JSON.stringify(this.state.musicList))\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        // 触发箭头状态管理\r\n        this.props.headerArrowFn()\r\n    }\r\n    handleMove(){\r\n        this.isMove = true // 表示列表正在滚动\r\n    }\r\n    handleEnd(id , musicName){\r\n        if(this.isMove){  // 滑动的时候\r\n            this.isMove = false\r\n        }else{ // 点击的时候\r\n            // 编程式路由\r\n            this.props.history.push('/pic/'+id)\r\n            // 触发歌曲id和播放状态\r\n            this.props.musicNameIdFn(id)\r\n            this.props.isMusicPlayFn()\r\n            this.props.musicNameFn(musicName)\r\n        }\r\n    }\r\n    \r\n    listScrollTop(){\r\n        var musicList = this.refs.musicList\r\n        var musicListLi = musicList.getElementsByTagName('li')\r\n        for(var i=0;i<musicListLi.length;i++){\r\n            if( musicListLi[i].className ){\r\n                musicList.scrollTop = musicListLi[i].offsetTop\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        musicNameId: state.musicNameId\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch){\r\n    return {\r\n        headerArrowFn(){\r\n            dispatch({ type:'HEADERARROW_CHANGE', payload:false })\r\n        },\r\n        musicNameIdFn(id){\r\n            dispatch({ type:'MUSICNAMEID_CHANGE',payload:id })\r\n        },\r\n        isMusicPlayFn(){\r\n            dispatch({ type:'ISMUSICPLAY_CHANGE',payload:true })\r\n        },\r\n        musicNameFn(musicName){\r\n            dispatch({ type:'MUSICNAME_CHANGE',payload:musicName })\r\n        }\r\n    }\r\n}\r\nvar List = connect(mapStateToProps,mapDispatchToProps)(ListUI)\r\n\r\nexport default List","\r\nfunction getSessionStorage(key){\r\n\treturn window.sessionStorage.getItem(key);\r\n}\r\n\r\nfunction setSessionStorage(key,value){\r\n\twindow.sessionStorage.setItem(key,value);\r\n}\r\n\r\nexport {\r\n\tgetSessionStorage,\r\n\tsetSessionStorage\r\n}","import React , {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport axios from 'axios'\r\nimport './Lyric.css'\r\n\r\nclass LyricUI extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            lyricList:[],\r\n            active:-1,\r\n        }\r\n        this.handleTouch = this.handleTouch.bind(this)\r\n    }\r\n    render(){\r\n        return (\r\n            <div id=\"musicLyric\">\r\n                <ul ref=\"musicLyricUl\" onTouchStart={this.handleTouch}>\r\n                    {\r\n                        this.state.lyricList.map((item,index)=>{\r\n                            return <li key={index} \r\n                                    className={ this.state.active === index ? \"active\" : ''}>\r\n                                        {item.lyric}\r\n                                    </li>\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount(){\r\n        // console.log(this.props)\r\n        var id = this.props.match.params.id\r\n        // 通过id获取歌词\r\n        axios.get('/music/Music/Music?id='+id+'&type=lrc').then(res=>{\r\n            console.log(res.data)\r\n            this.setState({\r\n                // 格式化歌词事件：xx.ww\r\n                lyricList:this.formatLyricData(res.data)\r\n            })\r\n        })\r\n        //触发箭头的状态管理\r\n\t\tthis.props.headerArrowFn();\r\n\t\tthis.props.musicNameIdFn(id);\r\n        if(this.props.isMusicPlay){\r\n\t\t\tthis.lyricPlay();\r\n\t\t}\r\n\t\telse{\r\n\t\t\tthis.lyricPause();   \r\n\t\t}\r\n    }\r\n    // 在这调用歌词播放：lyricPlay()\r\n    // 需要通过播放器状态来进行播放：isMusicPlay,首先从状态管理中获取这个值    \r\n   \r\n    // 将判断播放器状态来执行播放或暂停放在componentWillReceiveProps钩子函数中执行\r\n    // 这个钩子函数在传递进入当前组件的props发生变化时才调用\r\n    componentWillReceiveProps(nextProps){\r\n        // 需要通过播放器状态来进行播放：isMusicPlay,首先从状态管理中获取这个值\r\n        if( nextProps.isMusicPlay ){\r\n            this.lyricPlay()\r\n        }else{\r\n            this.lyricPause()\r\n        }\r\n    }\r\n     // 返回列表页时，销毁定时器\r\n    componentWillUnmount(){\r\n        this.lyricPause()\r\n    }\r\n    lyricPlay(){\r\n\t\tthis.playing();\r\n\t\tthis.timer = setInterval( this.playing.bind(this) , 500 );\r\n\t}\r\n\tlyricPause(){\r\n\t\tclearInterval(this.timer);\r\n\t}\r\n\tplaying(){\r\n\t\tvar lyricList = this.state.lyricList;\r\n\t\tvar audio = document.getElementById('audio');\r\n\t\tvar musicLyricUl = this.refs.musicLyricUl;\r\n\t\tvar musicLyricLi = musicLyricUl.getElementsByTagName('li')[0];\r\n\r\n\t\tfor(var i=0;i<lyricList.length;i++){\r\n            if( i+1<48 ){\r\n                if( lyricList[i].time < audio.currentTime && lyricList[i+1].time > audio.currentTime ){\r\n                    //console.log( lyricList[i].lyric );\r\n                    this.setState({\r\n                        active : i\r\n                    });\r\n                    if( i > 5 ){\r\n                        if(lyricList[i].lyric){\r\n                            musicLyricUl.style.top = - (i-5) * (musicLyricLi.offsetHeight + 8) + 'px';\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n\t\t}\r\n\t}\r\n     // 歌词点击事件：跳转到封面\r\n    handleTouch(){\r\n\t\tvar id = this.props.match.params.id;\r\n\t\tthis.props.history.push('/pic/' + id);\r\n\t}\r\n    // 格式化歌词\r\n    formatLyricData(lyrics){\r\n        var result = []\r\n        // 正则：匹配[,排除多个]，\r\n        var reg = /\\[([^\\]]+)\\]([^[]+)/g;\r\n        // 第二个参数是匹配到的时间，第三个参数是歌词内容\r\n        lyrics.replace(reg , ($0,$1,$2)=>{\r\n            result.push({ time: this.formatTimeToSec($1) , lyric:$2 })\r\n        })\r\n        return result\r\n    }\r\n    // 格式化时间\r\n    formatTimeToSec(time){\r\n        var arr = time.split(':')\r\n        // 分*60+秒，并且保留两位小数\r\n        return (parseFloat(arr[0]) * 60 + parseFloat(arr[1])).toFixed(2);\r\n    }\r\n   \r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        isMusicPlay: state.isMusicPlay\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch){\r\n    return {\r\n        headerArrowFn(){\r\n            dispatch({ type:'HEADERARROW_CHANGE', payload: true})\r\n        },\r\n        musicNameIdFn(id){\r\n            dispatch({ type:'MUSICNAMEID_CHANGE',payload:id})\r\n        }\r\n    }\r\n}\r\nvar Lyric = connect(mapStateToProps,mapDispatchToProps)(LyricUI)\r\n\r\nexport default Lyric","import React , {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport './Audio.css'\r\n\r\nclass AudioUI extends Component{\r\n    constructor(){\r\n        super()\r\n        this.handleTap = this.handleTap.bind(this)\r\n    }\r\n    render(){\r\n        return (\r\n            <div id=\"musicAudio\">\r\n                {/* 给小图标添加点击事件 */}\r\n                <div ref='audioPlay' onTouchStart={this.handleTap} className=\"audioPlay\"></div>\r\n                <div ref=\"audioProgress\" className=\"audioProgress\">\r\n                    <div ref=\"audioBar\" className=\"audioBar\"></div>\r\n                    <div ref=\"audioNow\" className=\"audioNow\"></div>\r\n                </div>\r\n                {/* 在这里需要先判断一下id是否为空，不然会报错 */}\r\n                <audio id=\"audio\" ref=\"audio\" src={ this.props.musicNameId && \"/music/Music/Music?id=\"+ this.props.musicNameId +\"&type=url\"}></audio>\r\n            </div>\r\n        )\r\n    }\r\n    // 在点击歌曲播放和跳转歌词页时播放器一直存在，会触发一个钩子函数：componentDidUpdate\r\n    componentDidUpdate(){\r\n        if( this.props.isMusicPlay ){  //isMusicPlay为true时播放\r\n            this.audioPlay()\r\n        }else{\r\n            this.audioPause()\r\n        }\r\n    }\r\n    // 在挂载完成的钩子函数中调用拖拽方法\r\n    componentDidMount(){\r\n        this.handleDrag()\r\n    }\r\n    // 播放:通过ref数据来控制样式修改播放图标: 点击播放时图标变为暂停图标\r\n    // 在audioPlay()中调用：并且使用定时器每隔1s\r\n    audioPlay(){\r\n        this.refs.audioPlay.style.backgroundImage = 'url(/images/list_audioPause.png)'\r\n        this.refs.audio.play() // 让音频进行播放，audio自带方法\r\n        this.playing()\r\n        this.timer = setInterval(this.playing.bind(this) , 1000)\r\n    }\r\n    // 暂停：点击暂停时，图标变为播放图标\r\n    audioPause(){\r\n        this.refs.audioPlay.style.backgroundImage = 'url(/images/list_audioPlay.png)'\r\n        this.refs.audio.pause() // 让音频暂停\r\n        clearInterval(this.timer)\r\n    }\r\n    // 监听实时播放\r\n    playing(){  \r\n        var audioProgress = this.refs.audioProgress\r\n        var audioBar = this.refs.audioBar\r\n        var audioNow = this.refs.audioNow   \r\n        var audio = this.refs.audio\r\n\r\n        // 让小球和进度条往前走\r\n        var scale = audio.currentTime / audio.duration\r\n        audioBar.style.left = scale * audioProgress.offsetWidth + \"px\";\r\n        audioNow.style.width = scale * 100 + \"%\";\r\n    }\r\n    // 小图标点击事件\r\n    handleTap(){\r\n        // 并没有歌曲被选中播放，进度条和播放器不能被拖拽和点击，所以需要做判断\r\n        if( !this.refs.audio.getAttribute(\"src\") ){\r\n            return false;\r\n        }else{\r\n            // 判断播放还是暂停\r\n            if(this.refs.audio.paused){ //暂停状态\r\n                // 暂停状态点击之后就播放，这里需要调用状态管理方法\r\n                this.props.isMusicPlayFn(true)\r\n            }else{\r\n                this.props.isMusicPlayFn(false)\r\n            }\r\n        }\r\n        \r\n    }\r\n    // 进度条拖拽方法\r\n    handleDrag(){\r\n        var audioProgress = this.refs.audioProgress\r\n        var audioBar = this.refs.audioBar\r\n        var audioNow = this.refs.audioNow   \r\n        var audio = this.refs.audio\r\n        var disX = 0\r\n        audioBar.ontouchstart = function(ev){\r\n            //console.log(ev);\r\n            var This = this;\r\n            var touch = ev.changedTouches[0];\r\n            disX = touch.pageX - this.offsetLeft;\r\n            document.ontouchmove = function(ev){\r\n                var touch = ev.changedTouches[0];\r\n                var L = touch.pageX - disX;\r\n                \r\n                if(L < 0){\r\n                    L = 0;\r\n                }\r\n                else if( L > audioProgress.offsetWidth ){\r\n                    L = audioProgress.offsetWidth;\r\n                }\r\n\r\n                This.style.left = L + 'px';\r\n\r\n                var scale = L / audioProgress.offsetWidth;  // 0~1\r\n                // 当前播放时间 = 比例*总时长\r\n                audio.currentTime = scale * audio.duration;\r\n                // 进度条进度\r\n                audioNow.style.width = scale * 100 + '%';\r\n\r\n            } ;\r\n            document.ontouchend = function(){\r\n                document.ontouchmove = document.ontouchend = null;\r\n            };\r\n            return false; \r\n        }\r\n    }\r\n}\r\nfunction mapStateToProps(state){\r\n    return {\r\n        isMusicPlay:state.isMusicPlay,\r\n        musicNameId:state.musicNameId\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch){\r\n    return {\r\n        isMusicPlayFn(bool){\r\n            dispatch({ type:\"ISMUSICPLAY_CHANGE\",payload:bool })\r\n        }\r\n    }\r\n}\r\nvar Audio = connect(mapStateToProps,mapDispatchToProps)(AudioUI)\r\n\r\nexport default Audio","import React , { Component } from 'react'\r\nimport './Pic.css'\r\nimport {connect} from 'react-redux'\r\nclass PicUI extends Component{\r\n    constructor(){\r\n        super()\r\n        this.handleTouch = this.handleTouch.bind(this);\r\n    }\r\n    render(){\r\n        return (\r\n            <div id='musicPic'>\r\n                <div ref=\"musicPic\" onTouchStart={this.handleTouch}>\r\n                    <img  src={'/music/Music/Music?id=' +this.props.match.params.id+'&type=pic'} alt='歌曲封面' />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    // componentDidUpdate在第一次触发时没有调用，所以还需要在componentDidMount上调用一次\r\n    componentDidMount(){\r\n        var id = this.props.match.params.id\r\n        // 触发箭头的状态管理\r\n        this.props.headerArrowFn()\r\n        // 通过id触发歌曲播放\r\n        this.props.musicNameIdFn(id)\r\n        // componentDidUpdate在第一次触发时没有调用，所以还需要在componentDidMount上调用一次\r\n        if(this.props.isMusicPlay){\r\n            this.picPlay()\r\n        }else{\r\n            this.picPause()\r\n        }\r\n    }\r\n    // 在componentDidUpdate中通过监听播放器的状态来调用picPlay和picPause\r\n    componentDidUpdate(){\r\n        if(this.props.isMusicPlay){\r\n            this.picPlay()\r\n        }else{\r\n            this.picPause()\r\n        }\r\n    }\r\n    picPlay(){\r\n        var musicPic = this.refs.musicPic;\r\n        musicPic.style.animationPlayState = 'running'\r\n    }\r\n    picPause(){\r\n        var musicPic = this.refs.musicPic;\r\n        musicPic.style.animationPlayState = 'paused'\r\n    }\r\n    // 封面点击事件：跳转到歌词页\r\n    handleTouch(){\r\n\t\tvar id = this.props.match.params.id;\r\n\t\tthis.props.history.push('/lyric/' + id);\r\n\t}\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n        isMusicPlay:state.isMusicPlay\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch){\r\n    return {\r\n        headerArrowFn(){\r\n            dispatch({ type:'HEADERARROW_CHANGE', payload:true })\r\n        },\r\n        musicNameIdFn(id){\r\n            dispatch({ type:'MUSICNAMEID_CHANGE', payload:id })\r\n        }\r\n    }\r\n}\r\nvar Pic = connect(mapStateToProps , mapDispatchToProps)(PicUI)\r\nexport default Pic","import React, { Component } from 'react';\nimport Header from './components/header/Header.js';\nimport List from './components/list/List.js';\nimport Lyric from './components/lyric/Lyric.js';\nimport Audio from './components/audio/Audio.js';\nimport Pic from './components/pic/Pic.js';\n\nimport { BrowserRouter as Router , Switch , Route , Redirect} from 'react-router-dom'\n\nclass App extends Component {\n  render() {\n    return (\n\t\t<Router>\n\t\t\t<div id='main'>\n\t\t\t\t<Header />\n\t\t\t\t<Switch>\t\n\t\t\t\t\t<Route path='/list' component={List} />\n\t\t\t\t\t<Route path=\"/lyric/:id\" component={ Lyric } />\n\t\t\t\t\t<Route path='/pic/:id' component={Pic} />\n\t\t\t\t\t<Redirect from='/*' to='/list' />\n\t\t\t\t</Switch>\n\t\t\t\t<Audio />\n\t\t\t</div>\n\t\t</Router>\n\t\t\n    );\n  }\n}\n\nexport default App;\n","import { createStore,combineReducers} from 'redux'\r\n\r\n// 箭头状态管理\r\nfunction headerArrowReducer(state=false,action){\r\n    if(action.type === 'HEADERARROW_CHANGE'){\r\n        return action.payload\r\n    }else{\r\n        return state\r\n    }\r\n}\r\n// 歌曲id状态管理\r\nfunction musicNameIdReducer(state='',action){\r\n    if(action.type === \"MUSICNAMEID_CHANGE\"){\r\n        return action.payload\r\n    }else{\r\n        return state\r\n    }\r\n}\r\n// 歌曲播放状态管理\r\nfunction isMusicPlayReducer(state=false,action){\r\n    if( action.type === \"ISMUSICPLAY_CHANGE\" ){\r\n        return action.payload\r\n    }else{\r\n        return state\r\n    }\r\n}\r\n// header的头部歌曲名称状态管理\r\nfunction musicNameReducer(state='巅峰榜 · 热歌' , action){\r\n    if( action.type === 'MUSICNAME_CHANGE'){\r\n        return action.payload\r\n    }else{\r\n        return state\r\n    }\r\n}\r\n\r\nvar reducers = combineReducers({\r\n    headerArrow: headerArrowReducer,\r\n    musicNameId: musicNameIdReducer,\r\n    isMusicPlay: isMusicPlayReducer,\r\n    musicName: musicNameReducer\r\n})\r\nvar store = createStore(reducers,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from './stores/index.js'\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}